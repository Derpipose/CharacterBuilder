name: CharacterBuilderFinalProject
run-name: Derp is derping
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  Deployment:
    runs-on: self-hosted
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.102




      - name: Kube
        run: |
          docker build -t 144.17.92.12:5000/rileyfinal/characterbuilder:$GITHUB_RUN_ID -f CharacterBuilderWeb/Dockerfile .
          docker push 144.17.92.12:5000/rileyfinal/characterbuilder:$GITHUB_RUN_ID
          docker build -t 144.17.92.12:5000/rileyfinal/characterbuilderapi:$GITHUB_RUN_ID -f CharacterBuilderAPI/Dockerfile .
          docker push 144.17.92.12:5000/rileyfinal/characterbuilderapi:$GITHUB_RUN_ID

          cd CharacterBuilderShared
          kubectl -n rileyfinal delete configmap characterbuilder-postgres-init || true
          kubectl -n rileyfinal create configmap characterbuilder-postgres-init --from-file=init.sql 
          cd ..

          cd kube-config
          kubectl -n rileyfinal delete configmap grafana-datasources-config || true
          kubectl -n rileyfinal create configmap grafana-datasources-config --from-file=grafana-datasources.yml
          kubectl -n rileyfinal delete configmap otel-config || true
          kubectl -n rileyfinal create configmap otel-config --from-file=otel-config.yml
          kubectl -n rileyfinal delete configmap prometheus-config || true
          kubectl -n rileyfinal create configmap prometheus-config --from-file=prometheus-config.yml
          kubectl -n rileyfinal delete configmap blackbox-config || true
          kubectl -n rileyfinal create configmap blackbox-config --from-file=blackbox-config.yml
          

          cd ..

          for file in ./kube/*; do
            echo "Applying $file"
            cat $file | envsubst | kubectl apply -f -
          done

      - name: Formatting Ensured
        run: dotnet format --verify-no-changes --verbosity diagnostic
        
      - name: Set Up Tests
        run: |
          cd CharacterTests
          docker compose up --build -d
          docker-compose exec -T charactertesting dotnet test
        
      - name: Cleaning Up Tests
        if: always()
        run: |
          cd CharacterTests
          docker compose down -v

      - name: Build No Error
        run: |
          dotnet build --warnaserror



      - name: Send MS Teams Notification on Fail
        if: ${{ failure() }}
        uses: jdcargile/ms-teams-notification@v1.4
        with:
          github-token: ${{ github.token }}
          ms-teams-webhook-uri: ${{ secrets.TEAMS_WEBHOOK_URL }}
          notification-summary: Oh No! A derp went wrong!!!
          notification-color: dc3545

      - name: Send MS Teams Notification on Success
        if: ${{ success() }}
        uses: jdcargile/ms-teams-notification@v1.4
        with:
          github-token: ${{ github.token }}
          ms-teams-webhook-uri: ${{ secrets.TEAMS_WEBHOOK_URL }}
          notification-summary: A Derp did a good!!!
          notification-color: 3545dc